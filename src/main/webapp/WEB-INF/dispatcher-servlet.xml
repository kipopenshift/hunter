<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<import resource="/application.xml" />
	<import resource="/hunterDmsBeans.xml" />
	
<!-- 	<bean id="statesDao" class="com.kendo.kip.dao.imp.StateDaoImpl">
	    <constructor-arg>
	        <ref local="jdbcTemplate" /> 
	    </constructor-arg>
	</bean> -->
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>
	
	<bean id="hunterJDBCExecutor" class="com.techmaster.hunter.dao.impl.HunterJDBCExecutorImpl">
        <constructor-arg index="0"> 
			<ref local="jdbcTemplate" />
		</constructor-arg>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref local="dataSource" />
		</constructor-arg>
	</bean>
	
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
        <property name="username" value="system"/>
        <property name="password" value="Never.90"/>
    </bean> 
    
    <!-- This is for json -->
    
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="objectMapper">
            <ref local="hunterJacksonMapper" />
        </property>
    </bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref local="jacksonMessageConverter" />
			</list>
		</property>
		<property name="order" value="0" />
	</bean>
	
	<bean id="hunterJacksonMapper" class="com.techmaster.hunter.obj.beans.HunterJacksonMapper" ></bean>
	
	
	<!-- For email -->
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="https://google.com/gmail" />
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="hillangat@gmail.com" />
		<property name="subject" value="Email Sending Test" />
	</bean>

	<bean id="taskEmailManager" class="com.techmaster.hunter.email.TaskEmailManagerImpl">
		<property name="mailSender" ref="mailSender" />
		<property name="templateMessage" ref="templateMessage" />
	</bean>
	
	<!-- This is for statically injecting DAO beans to HunterMsgReceiverExtractor -->
	<bean name="methodInvokingFactoryBean" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.techmaster.hunter.imports.extractors.HunterMsgReceiverExtractor.staticInjectDaos"/>
        <property name="arguments">
            <list>
                <ref bean="hunterMessageReceiverDao"/>
                <ref local="hunterJDBCExecutor"/>
                <ref bean="hunterImportBeanDao"/>
            </list>
       </property>
	</bean>
	<!-- This is for statically injecting DAO beans to RegionCache -->
	<bean name="methodInvokingFactoryBean2" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.techmaster.hunter.region.RegionCache.setReceiverRegionDao"/>
        <property name="arguments">
            <list>
                <ref bean="receiverRegionDao"/>
                <ref bean="hunterMessageReceiverDao"/>
            </list>
       </property>
	</bean>
	
	
    <!--   <context:property-placeholder location="jdbc.properties"/>     -->
    
	<mvc:resources mapping="/static/**" location="/" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler /> <!-- Added this default thing because it was failing. -->
	
	<context:component-scan base-package="com.techmaster.hunter.controllers" />
	<context:component-scan base-package="com.techmaster.hunter.beans" />
	<context:component-scan base-package="com.techmaster.hunter.obj.beans.converters" />
	<context:component-scan base-package="com.techmaster.hunter.region" />
	
	<mvc:view-controller path="/" view-name="access/login"/>
	
	
	<!-- These are for excel download and processing -->
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />
    <!-- <bean class="com.kendo.kip.mvc.ExcelController" /> -->
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <property name="location">
	       <value>/WEB-INF/spring-excel-views.xml</value>
	   </property>
	   <property name="order" value="1" />
	</bean>

</beans>
